<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<!-- 
namespace 命名空间，隔离sql语句
 -->
<mapper namespace="user">
	
	<!-- 
		id:自定义，建议有意义的，不能重复
		parameterType:传递参数的类型
		#{}:占位符，表示传递的参数值，如果是基本的数据类型，
			{}里面可以用value或者其中值
			#{id}：其中的id表示接收的输入参数，参数名称就是id，
			如果输入参数是简单类型，#{}中的参数名可以任意，可以为value或者其他
		resultType:结果返回值;指定sql输出结果的所映射的java对象类型
	 -->
	<select id="findUserById" parameterType="int" resultType="cn.zhiyou.mybatis.po.TbUser">
		select * from tb_user where id=#{value}
	</select>
	
	
	<!-- 根据用户名称模糊查询 -->
	<!-- 
		4.${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中
    	5.使用${}容易引起sql注入
    	6.${value}:接受输入参数的内容，如果传入类型是简单类型，${}中只能用value

	 -->
	<select id="findUserByName" parameterType="java.lang.String" resultType="cn.zhiyou.mybatis.po.TbUser">
		select * from tb_user where username like '%${value}%'
	</select>
	
	<!-- 添加用户信息 -->
	<insert id="addUser" parameterType="cn.zhiyou.mybatis.po.TbUser">
		<!--
			将插入数据的主键返回，返回到user对象中
		        SELECT LAST_INSERT_ID()：得到刚insert进去记录的主键值，只适用于自增主键
		        keyProperty：将查询到主键值设置到parameterType指定的对象的哪个属性
		        order：SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序
		        resultType：指定SELECT LAST_INSERT_ID()的结果类型
		-->
		<!-- 如果是自增的主键，可以不用写selectKey;
			如果不配置则在java代码里的用户对象不能获得主键返回值
		-->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select LAST_INSERT_ID()
		</selectKey>
		insert into tb_user(username,sex,birthday,address) 
	value(#{username},#{sex},#{birthday},#{address})
	</insert>
	
	
	<update id="updateUser" parameterType="cn.zhiyou.mybatis.po.TbUser">
		update tb_user set username=#{username},sex=#{sex},birthday=#{birthday},address=#{address}
		 where id=#{id}
	</update>
	
	<delete id="deleteUser" parameterType="java.lang.Long">
		delete from tb_user where id=#{value}
	</delete>
</mapper>